class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        dig_dic = {
            "I":"1","II":"2","III":"3","IV":"4","V":"5","VI":"6","VII":"7","VIII":"8","IX":"9",
            "X":"10","XX":"20","XXX":"30","XL":"40","L":"50","LX":"60","LXX":"70","LXXX":"80","XC":"90",
            "C":"100", "CC":"200", "CCC":"300", "CD":"400", "D":"500", "DC":"600", "DCC":"700", "DCCC":"800", "CM":"900",       
            "M":"1000","MM":"2000","MMM":"3000"}

        dig = 0
            
        while s not in dig_dic:
            for i, ch in enumerate(s):                
                if s[0:i] in dig_dic and s[0:i+1] in dig_dic:
                    # print("Full String is {}, Found: {}, Found Roman String {}".format(s[:-1], s[0:i], s[0:i+1]))
                    pass
                if s[0:i] in dig_dic and s[0:i+1] not in dig_dic:
                    # print("Full String is {}, Found: {}, Not Found Roman String {}".format(s[:-1], s[0:i], s[0:i+1]))
                    dig += int(dig_dic[s[0:i]])
                    s = s[i:]
                    break

        dig += int(dig_dic[s])
        return dig
