class Solution(object):
    def myAtoi(self, str):
        """
        :type str: str
        :rtype: int
        """
        sign_symbol = '+'
        
        if len(str) == 0: # str is empty
            return 0 
        
        if (str[0] == '\'' and str[-1] == '\'') or (str[0] == '\"' and str[-1] == '\"'):
            str = str[1:-1]
        
        str_len = len(str)
        start_point = 0
        end_point = 0
        
        for i in range(str_len):
            if str[i] != ' ':
                start_point = i
                break
                
        for i in range(str_len):
            if str[str_len-i-1] != ' ':
                end_point = str_len-i
                break
        str = str[start_point:end_point]     
                
        
        if str[0] == '+' or str[0] == '-': 
            sign_symbol = str[0]
            str = str[1:]
        
        dig_list = []
        for i in str:
            if ord(i) < 48 or ord(i) > 57:
                break
            else:
                dig_list.append(i)
        
        result = 0
        power = 0
        while dig_list:
            dig = dig_list.pop()
            print(dig)        
            result += int(dig) * pow(10,power)
            if sign_symbol == '+' and result >= 2147483648: 
                return 2147483647
            if sign_symbol == '-' and result >= 2147483648: 
                return -2147483648 
            power += 1
            
        if sign_symbol == '-':
            result = -result 
        
        return result
